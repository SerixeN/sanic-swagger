version: 2
jobs:
  lint_git_commits:
    docker:
      - image: python:3.6
    working_directory: ~/sanic-swagger
    steps:
      - checkout
      - run: pip install gitlint
      - run: gitlint --commits fbb925a...HEAD

  lint:
    docker:
      - image: python:3.6
    working_directory: ~/sanic-swagger
    steps:
      - checkout
      - run: pip install pipenv
      - run: pipenv install --dev
      - run: pipenv run flake8 --show-source --import-order-style pep8

  test:
    docker:
      - image: python:3.6
    working_directory: ~/sanic-swagger
    steps:
      - checkout
      - run: pip install pipenv
      - run: pipenv install --dev
      - run: pipenv run pytest --cov-report html --cov-report xml:codecov.xml --junit-xml=coverage.xml --cov-branch --cov-fail-under=90 -v --cov=sanic_swagger tests/
      - run: mkdir -p test-results/pytest && cp coverage.xml test-results/pytest/results.xml
      - run: pipenv run codecov -t $CODECOV_TOKEN

      - store_artifacts:
          path: htmlcov

      - store_test_results:
          path: test-results

  deploy:
    docker:
      - image: python:3.6
    working_directory: ~/sanic-swagger
    steps:
      - checkout
      - run: pip install pipenv
      - run: pipenv install --dev
      - run:
          name: Verify git tag vs. version
          command: |
            echo "CIRCLE_TAG=$(git tag -l --points-at HEAD)" > .env
            cat .env
            pipenv run python setup.py verify
      - run:
          name: Init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = abatilo" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc
      - run:
          name: Create packages
          command: |
            pipenv run python setup.py sdist
            pipenv run python setup.py bdist_wheel
      - run:
          name: Upload packages
          command: |
            pipenv run twine upload dist/*

workflows:
  version: 2
  build:
    jobs:
      - lint_git_commits
      - lint
      - test
      - deploy:
          requires:
            - lint_git_commits
            - lint
            - test
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /[0-9]\.[0-9]\.[0-9]/
